{"version":3,"sources":["components/Section.js","services/contacts-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","components/ContactListItem.js","components/ContactList.js","components/ContactForm.js","components/Filter.js","App.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js"],"names":["Section","title","children","BASE_URL","fetchContacts","a","axios","get","data","fetchAddContact","item","post","fetchDeleteContact","id","delete","fetchContact","createAsyncThunk","_","rejectWithValue","contactsAPI","error","message","addContact","deleteContact","getContacts","state","contacts","getFilter","filter","getLoader","loading","filterContact","createAction","ContactList","name","number","dispatch","useDispatch","type","onClick","contactsOperations","onDelete","useSelector","contactsSelectors","loader","useEffect","filteredContacts","useMemo","normalizedFilter","toLowerCase","contact","includes","map","length","ContactForm","useState","setName","setNumber","handleChange","e","target","value","formSubmitHandler","normalizedName","find","el","alert","nameId","uuidv4","telId","onSubmit","preventDefault","htmlFor","pattern","required","onChange","Component","changeFilter","useCallback","contactsActions","App","createReducer","fulfilled","action","payload","pending","rejected","contactReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1a68f26.chunk.js","sourcesContent":["export default function Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://6196d384af46280017e7e2d4.mockapi.io/contacts';\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(`${BASE_URL}`);\n  return data;\n}\n\nexport async function fetchAddContact(item) {\n  const { data } = await axios.post(`${BASE_URL}`, item);\n  return data;\n}\n\nexport async function fetchDeleteContact(id) {\n  const { data } = await axios.delete(`${BASE_URL}/${id}`);\n  return data;\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { contactsAPI } from 'services';\n\nexport const fetchContact = createAsyncThunk(\n  'contacts/fetchContact',\n  async (_, { rejectWithValue }) => {\n    try {\n      const data = await contactsAPI.fetchContacts();\n      return data;\n    } catch (err) {\n      return rejectWithValue(err.error.message);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async (item, { rejectWithValue }) => {\n    try {\n      const data = await contactsAPI.fetchAddContact(item);\n      return data;\n    } catch (err) {\n      return rejectWithValue(err.error.message);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      const data = await contactsAPI.fetchDeleteContact(id);\n      return data;\n    } catch (err) {\n      return rejectWithValue(err.error.message);\n    }\n  },\n);\n","export const getContacts = state => state.contacts;\nexport const getFilter = state => state.filter;\nexport const getLoader = state => state.loading;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const filterContact = createAction('contacts/filterContact');\n","import { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\n\nexport default function ContactList({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const onDelete = id => dispatch(contactsOperations.deleteContact(id));\n\n  return (\n    <li>\n      <span>{name}:</span>\n      <span>{number}</span>\n      <button\n        type=\"button\"\n        id={id}\n        onClick={() => {\n          onDelete(id);\n        }}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n","import { useEffect, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from 'redux/contacts';\nimport ContactListItem from './ContactListItem';\n\nexport default function ContactList() {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const filter = useSelector(contactsSelectors.getFilter);\n  const loader = useSelector(contactsSelectors.getLoader);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    return dispatch(contactsOperations.fetchContact());\n  }, [dispatch]);\n\n  const filteredContacts = useMemo(() => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  }, [filter, contacts]);\n\n  return (\n    <>\n      {loader && <h1>Loading...</h1>}\n      <ul>\n        {!loader &&\n          filteredContacts.map(({ id, name, number }) => (\n            <ContactListItem key={id} id={id} name={name} number={number} />\n          ))}\n      </ul>\n      {filteredContacts.length === 0 && !loader && (\n        <h1>There are no contacts in phonebook!</h1>\n      )}\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport { contactsOperations } from 'redux/contacts';\n\nexport default function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  useEffect(() => {\n    return dispatch(contactsOperations.fetchContact());\n  }, [dispatch]);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    formSubmitHandler({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  const formSubmitHandler = item => {\n    const normalizedName = item.name.toLowerCase();\n    contacts.find(el => {\n      return el.name.toLowerCase() === normalizedName;\n    })\n      ? alert(`${item.name} is already in contacts`)\n      : dispatch(contactsOperations.addContact(item));\n  };\n\n  const nameId = uuidv4();\n  const telId = uuidv4();\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={nameId}>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        id={nameId}\n        onChange={handleChange}\n      />\n      <label htmlFor={telId}>Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={number}\n        id={telId}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  state: PropTypes.objectOf(PropTypes.string),\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors } from 'redux/contacts';\nimport { contactsActions } from 'redux/contacts';\n\nexport default function Component() {\n  const filter = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  const changeFilter = useCallback(\n    e => {\n      dispatch(contactsActions.filterContact(e.target.value));\n    },\n    [dispatch],\n  );\n\n  return (\n    <div>\n      <label htmlFor={uuidv4()}>Find contacts by name</label>\n      <input type=\"text\" value={filter} id={uuidv4()} onChange={changeFilter} />\n    </div>\n  );\n}\n","import './App.css';\nimport Section from './components/Section';\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\n\nexport default function App() {\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { contactsActions } from '.';\nimport { contactsOperations } from '.';\n\nconst contacts = createReducer([], {\n  [contactsOperations.fetchContact.fulfilled]: (_, action) => action.payload,\n  [contactsOperations.addContact.fulfilled]: (state, action) => [\n    ...state,\n    action.payload,\n  ],\n  [contactsOperations.deleteContact.fulfilled]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload.id),\n});\n\nconst filter = createReducer('', {\n  [contactsActions.filterContact]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [contactsOperations.fetchContact.pending]: () => true,\n  [contactsOperations.fetchContact.fulfilled]: () => false,\n  [contactsOperations.fetchContact.rejected]: () => false,\n\n  [contactsOperations.addContact.pending]: () => true,\n  [contactsOperations.addContact.fulfilled]: () => false,\n  [contactsOperations.addContact.rejected]: () => false,\n\n  [contactsOperations.deleteContact.pending]: () => true,\n  [contactsOperations.deleteContact.fulfilled]: () => false,\n  [contactsOperations.deleteContact.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [contactsOperations.fetchContact.rejected]: (_, action) => action.payload,\n  [contactsOperations.fetchContact.pending]: () => null,\n\n  [contactsOperations.addContact.rejected]: (_, action) => action.payload,\n  [contactsOperations.addContact.pending]: () => null,\n\n  [contactsOperations.deleteContact.rejected]: (_, action) => action.payload,\n  [contactsOperations.deleteContact.pending]: () => null,\n});\n\nexport const contactReducer = combineReducers({\n  contacts,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { contactReducer } from './contacts/contacts-reducers';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\n\n//  --- EXAMPLE WITH CUSTOM MIDLEWARE ---\n// const myMiddleware = store => next => action => {\n//   console.log('My midleware!', action);\n//   next(action);\n// };\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // myMiddleware,\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: contactReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}